[tool.poetry]
name = "jaxrenderer"
version = "0.3.2"
description = "Jax implementation of rasterizer renderer."
authors = ["Joey Teng <joey.teng.dev@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/JoeyTeng/jaxrenderer"
repository = "https://github.com/JoeyTeng/jaxrenderer"
classifiers = [
    "Topic :: Multimedia :: Graphics :: 3D Rendering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Visualization",
    "Development Status :: 3 - Alpha",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Natural Language :: Chinese (Simplified)",
    "Natural Language :: English",
    "Typing :: Typed",
]
packages = [
    { include = "renderer" },
]
include = [
    "LICENSE",
    "README.md",
    "changelog.md",
    "pyproject.toml",
]


[tool.poetry.dependencies]
python = "^3.8"
jax = "^0.4.0"
numpy = "^1.22.0"
jaxlib = {version = "^0.4.0", source = "jax"}
jaxtyping = [
    {version = ">=0.2.13,<0.2.20", python = ">=3.8,<3.9"},
    {version = "^0.2.19", python = "^3.9"}
]
importlib-metadata = "^6.6.0"
typing_extensions = "^4.3.0"


[tool.poetry.group.dev.dependencies]
matplotlib = "^3.6.2"
pillow = "^9.4.0"
importlib-resources = "^5.12.0"


[tool.poetry.group.test.dependencies]
pre-commit = "^3.3.3"
pytest = "^7.0.0"
tox = "^4.0.0"


[[tool.poetry.source]]
name = "jax"
url = "https://storage.googleapis.com/jax-releases/jax_releases.html"
priority = "explicit"


[tool.poetry.urls]
"Bug Tracker" = "https://github.com/JoeyTeng/jaxrenderer/issues"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

[tool.isort]
profile = "black"
py_version= 311
src_paths = ["renderer", "examples", "test_resources", "tests"]
line_length = 88
combine_star = true
order_by_type = true
case_sensitive = true
force_sort_within_sections = true
split_on_trailing_comma = true
only_modified = true
skip_gitignore = true

[tool.black]
target-versions = ["py38", "py39", "py310", "py311"]
required-version = 23

[tool.pyright]
include = ["renderer", "examples", "test_resources", "tests"]
exclude = ["typings/**", ".*/**", "**/node_modules", "**/__pycache__"]
typeCheckingMode = "strict"

pythonVersion = "3.11"
pythonPlatform = "All"

executionEnvironments = [
  { root = ".", pythonVersion = "3.11", pythonPlatform = "All" },
]

reportCallInDefaultInitializer = "information"
reportImplicitOverride = "information"
reportImplicitStringConcatenation = "none"
reportImportCycles = "error"
reportMissingSuperCall = "information"
reportPropertyTypeMismatch = "information"
reportShadowedImports = "warning"
reportUninitializedInstanceVariable = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnusedCallResult = "information"
